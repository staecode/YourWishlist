{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cnamu\\\\OneDrive\\\\Documents\\\\Desktop\\\\SPRING 2021\\\\CS465P\\\\Final_Project\\\\YourWishlist\\\\client\\\\src\\\\Home\\\\EditProfile\\\\Tabs.tsx\";\n\nimport React, { Children, useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport Animated, { useAnimatedStyle } from \"react-native-reanimated\";\nimport { mix, useTiming } from \"react-native-redash\";\nimport { Box, Text, useTheme } from \"../../components\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar Tabs = function Tabs(_ref) {\n  var tabs = _ref.tabs,\n      children = _ref.children;\n  var theme = useTheme();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var transition = useTiming(index);\n  var dot = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        transform: [{\n          translateX: mix(transition.value, width * 0.25, width * 0.75)\n        }]\n      };\n    };\n\n    _f._closure = {\n      mix,\n      transition,\n      width\n    };\n    _f.asString = \"function _f(){const{mix,transition,width}=jsThis._closure;{return{transform:[{translateX:mix(transition.value,width*0.25,width*0.75)}]};}}\";\n    _f.__workletHash = 7940464650469;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var content = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        transform: [{\n          translateX: -width * transition.value\n        }]\n      };\n    };\n\n    _f._closure = {\n      width,\n      transition\n    };\n    _f.asString = \"function _f(){const{width,transition}=jsThis._closure;{return{transform:[{translateX:-width*transition.value}]};}}\";\n    _f.__workletHash = 5264112932492;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(Box, {\n    flex: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Box, {\n    flexDirection: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, tabs.map(function (tab, i) {\n    return React.createElement(RectButton, {\n      style: {\n        flex: 1\n      },\n      key: i,\n      onPress: function onPress() {\n        return setIndex(i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, React.createElement(Box, {\n      padding: \"m\",\n      style: {\n        paddingBottom: theme.spacing.m + 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      variant: \"title3\",\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, tab.title)));\n  }), React.createElement(Animated.View, {\n    style: [{\n      position: \"absolute\",\n      bottom: 0,\n      left: -5,\n      backgroundColor: theme.colors.primary,\n      width: 10,\n      height: 10,\n      borderRadius: 5\n    }, dot],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), React.createElement(Animated.View, {\n    style: [{\n      flex: 1,\n      width: width * tabs.length,\n      flexDirection: \"row\"\n    }, content],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, Children.map(children, function (child, i) {\n    return React.createElement(Box, {\n      flex: 1,\n      key: i,\n      width: width,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, child);\n  })));\n};\n\nexport default Tabs;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/src/Home/EditProfile/Tabs.tsx"],"names":["React","Children","useState","RectButton","Animated","useAnimatedStyle","mix","useTiming","Box","Text","useTheme","Dimensions","get","width","Tabs","tabs","children","theme","index","setIndex","transition","dot","transform","translateX","value","content","map","tab","i","flex","paddingBottom","spacing","m","title","position","bottom","left","backgroundColor","colors","primary","height","borderRadius","length","flexDirection","child"],"mappings":"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","sourcesContent":["import React, { Children, ReactNode, useState } from \"react\";\r\nimport { Dimensions } from \"react-native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport Animated, { useAnimatedStyle } from \"react-native-reanimated\";\r\nimport { mix, useTiming } from \"react-native-redash\";\r\n\r\nimport { Box, Text, useTheme } from \"../../components\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\ninterface Tab {\r\n  id: string;\r\n  title: string;\r\n}\r\n\r\ninterface TabsProps {\r\n  tabs: Tab[];\r\n  children: ReactNode;\r\n}\r\n\r\nconst Tabs = ({ tabs, children }: TabsProps) => {\r\n  const theme = useTheme();\r\n  const [index, setIndex] = useState(0);\r\n  const transition = useTiming(index);\r\n  const dot = useAnimatedStyle(() => ({\r\n    transform: [\r\n      { translateX: mix(transition.value, width * 0.25, width * 0.75) },\r\n    ],\r\n  }));\r\n  const content = useAnimatedStyle(() => ({\r\n    transform: [{ translateX: -width * transition.value }],\r\n  }));\r\n  return (\r\n    <Box flex={1}>\r\n      <Box flexDirection=\"row\">\r\n        {tabs.map((tab, i) => (\r\n          <RectButton style={{ flex: 1 }} key={i} onPress={() => setIndex(i)}>\r\n            <Box\r\n              padding=\"m\"\r\n              style={{\r\n                paddingBottom: theme.spacing.m + 10,\r\n              }}\r\n            >\r\n              <Text variant=\"title3\" textAlign=\"center\">\r\n                {tab.title}\r\n              </Text>\r\n            </Box>\r\n          </RectButton>\r\n        ))}\r\n        <Animated.View\r\n          style={[\r\n            {\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              left: -5,\r\n              backgroundColor: theme.colors.primary,\r\n              width: 10,\r\n              height: 10,\r\n              borderRadius: 5,\r\n            },\r\n            dot,\r\n          ]}\r\n        />\r\n      </Box>\r\n      <Animated.View\r\n        style={[\r\n          {\r\n            flex: 1,\r\n            width: width * tabs.length,\r\n            flexDirection: \"row\",\r\n          },\r\n          content,\r\n        ]}\r\n      >\r\n        {Children.map(children, (child, i) => (\r\n          <Box flex={1} key={i} width={width}>\r\n            {child}\r\n          </Box>\r\n        ))}\r\n      </Animated.View>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n"]},"metadata":{},"sourceType":"module"}