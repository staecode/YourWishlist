{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cnamu\\\\OneDrive\\\\Documents\\\\Desktop\\\\SPRING 2021\\\\CS465P\\\\Final_Project\\\\YourWishlist\\\\client\\\\src\\\\Home\\\\OutfitIdeas\\\\Card.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { Extrapolate, interpolate, useAnimatedGestureHandler, useAnimatedStyle, useDerivedValue, useSharedValue, withSpring } from \"react-native-reanimated\";\nimport { PanGestureHandler } from \"react-native-gesture-handler\";\nimport { mix, mixColor, snapPoint } from \"react-native-redash\";\nimport { Box } from \"../../components\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    wWidth = _Dimensions$get.width;\n\nvar width = wWidth * 0.75;\nvar height = width * (425 / 294);\nvar borderRadius = 24;\nvar snapPoints = [-wWidth, 0, wWidth];\n\nvar Card = function Card(_ref) {\n  var onSwipe = _ref.onSwipe,\n      source = _ref.source,\n      step = _ref.step,\n      index = _ref.index,\n      aIndex = _ref.aIndex;\n  var translateY = useSharedValue(0);\n  var translateX = useSharedValue(0);\n  var position = useDerivedValue(function () {\n    const _f = function () {\n      return index * step - aIndex.value;\n    };\n\n    _f._closure = {\n      index,\n      step,\n      aIndex\n    };\n    _f.asString = \"function _f(){const{index,step,aIndex}=jsThis._closure;{return index*step-aIndex.value;}}\";\n    _f.__workletHash = 1280043038260;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var onGestureEvent = useAnimatedGestureHandler({\n    onStart: function () {\n      const _f = function (_, ctx) {\n        ctx.x = translateX.value;\n        ctx.y = translateY.value;\n      };\n\n      _f._closure = {\n        translateX,\n        translateY\n      };\n      _f.asString = \"function onStart(_,ctx){const{translateX,translateY}=jsThis._closure;{ctx.x=translateX.value;ctx.y=translateY.value;}}\";\n      _f.__workletHash = 9192642914190;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    onActive: function () {\n      const _f = function (_ref2, ctx) {\n        var translationX = _ref2.translationX,\n            translationY = _ref2.translationY;\n        translateX.value = translationX + ctx.x;\n        translateY.value = translationY + ctx.y;\n      };\n\n      _f._closure = {\n        translateX,\n        translateY\n      };\n      _f.asString = \"function onActive(_ref2,ctx){const{translateX,translateY}=jsThis._closure;{var translationX=_ref2.translationX,translationY=_ref2.translationY;translateX.value=translationX+ctx.x;translateY.value=translationY+ctx.y;}}\";\n      _f.__workletHash = 3639212111922;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    onEnd: function () {\n      const _f = function (_ref3) {\n        var velocityX = _ref3.velocityX,\n            velocityY = _ref3.velocityY;\n        translateY.value = withSpring(0, {\n          velocity: velocityY\n        });\n        var dest = snapPoint(translateX.value, velocityX, snapPoints);\n        translateX.value = withSpring(dest, {\n          overshootClamping: dest === 0 ? false : true,\n          restSpeedThreshold: dest === 0 ? 0.01 : 100,\n          restDisplacementThreshold: dest === 0 ? 0.01 : 100\n        }, function () {\n          return dest !== 0 && onSwipe();\n        });\n      };\n\n      _f._closure = {\n        translateY,\n        withSpring,\n        snapPoint,\n        translateX,\n        snapPoints,\n        onSwipe\n      };\n      _f.asString = \"function onEnd(_ref3){const{translateY,withSpring,snapPoint,translateX,snapPoints,onSwipe}=jsThis._closure;{var velocityX=_ref3.velocityX,velocityY=_ref3.velocityY;translateY.value=withSpring(0,{velocity:velocityY});var dest=snapPoint(translateX.value,velocityX,snapPoints);translateX.value=withSpring(dest,{overshootClamping:dest===0?false:true,restSpeedThreshold:dest===0?0.01:100,restDisplacementThreshold:dest===0?0.01:100},function(){return dest!==0&&onSwipe();});}}\";\n      _f.__workletHash = 3879936166550;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }()\n  });\n  var imageStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        transform: [{\n          scale: interpolate(position.value, [0, step], [1.2, 1], Extrapolate.CLAMP)\n        }]\n      };\n    };\n\n    _f._closure = {\n      interpolate,\n      position,\n      step,\n      Extrapolate: {\n        CLAMP: Extrapolate.CLAMP\n      }\n    };\n    _f.asString = \"function _f(){const{interpolate,position,step,Extrapolate}=jsThis._closure;{return{transform:[{scale:interpolate(position.value,[0,step],[1.2,1],Extrapolate.CLAMP)}]};}}\";\n    _f.__workletHash = 17379812529521;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var cardStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      var scale = mix(position.value, 1, 0.9);\n      return {\n        transform: [{\n          translateY: translateY.value\n        }, {\n          translateX: translateX.value\n        }, {\n          scale: scale\n        }],\n        backgroundColor: mixColor(position.value, \"#C9E9E7\", \"#74BCB8\")\n      };\n    };\n\n    _f._closure = {\n      mix,\n      position,\n      translateY,\n      translateX,\n      mixColor\n    };\n    _f.asString = \"function _f(){const{mix,position,translateY,translateX,mixColor}=jsThis._closure;{var scale=mix(position.value,1,0.9);return{transform:[{translateY:translateY.value},{translateX:translateX.value},{scale:scale}],backgroundColor:mixColor(position.value,\\\"#C9E9E7\\\",\\\"#74BCB8\\\")};}}\";\n    _f.__workletHash = 6548361225600;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(Box, {\n    style: StyleSheet.absoluteFill,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(PanGestureHandler, {\n    onGestureEvent: onGestureEvent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(Animated.View, {\n    style: [{\n      width: width,\n      height: height,\n      borderRadius: borderRadius,\n      overflow: \"hidden\"\n    }, cardStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.Image, {\n    source: source,\n    style: [_objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      width: undefined,\n      height: undefined\n    }), imageStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/src/Home/OutfitIdeas/Card.tsx"],"names":["React","Animated","Extrapolate","interpolate","useAnimatedGestureHandler","useAnimatedStyle","useDerivedValue","useSharedValue","withSpring","PanGestureHandler","mix","mixColor","snapPoint","Box","Dimensions","get","wWidth","width","height","borderRadius","snapPoints","Card","onSwipe","source","step","index","aIndex","translateY","translateX","position","value","onGestureEvent","onStart","_","ctx","x","y","onActive","translationX","translationY","onEnd","velocityX","velocityY","velocity","dest","overshootClamping","restSpeedThreshold","restDisplacementThreshold","imageStyle","transform","scale","CLAMP","cardStyle","backgroundColor","StyleSheet","absoluteFill","overflow","absoluteFillObject","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Dimensions, ImageRequireSource, StyleSheet } from \"react-native\";\r\nimport Animated, {\r\n  Extrapolate,\r\n  interpolate,\r\n  useAnimatedGestureHandler,\r\n  useAnimatedStyle,\r\n  useDerivedValue,\r\n  useSharedValue,\r\n  withSpring,\r\n} from \"react-native-reanimated\";\r\nimport { PanGestureHandler } from \"react-native-gesture-handler\";\r\nimport { mix, mixColor, snapPoint } from \"react-native-redash\";\r\n\r\nimport { Box } from \"../../components\";\r\n\r\nconst { width: wWidth } = Dimensions.get(\"window\");\r\nconst width = wWidth * 0.75;\r\nconst height = width * (425 / 294);\r\nconst borderRadius = 24;\r\nconst snapPoints = [-wWidth, 0, wWidth];\r\n\r\ninterface CardProps {\r\n  onSwipe: () => void;\r\n  source: ImageRequireSource;\r\n  step: number;\r\n  index: number;\r\n  aIndex: Animated.SharedValue<number>;\r\n}\r\n\r\nconst Card = ({ onSwipe, source, step, index, aIndex }: CardProps) => {\r\n  const translateY = useSharedValue(0);\r\n  const translateX = useSharedValue(0);\r\n  const position = useDerivedValue(() => index * step - aIndex.value);\r\n  const onGestureEvent = useAnimatedGestureHandler<{ x: number; y: number }>({\r\n    onStart: (_, ctx) => {\r\n      ctx.x = translateX.value;\r\n      ctx.y = translateY.value;\r\n    },\r\n    onActive: ({ translationX, translationY }, ctx) => {\r\n      translateX.value = translationX + ctx.x;\r\n      translateY.value = translationY + ctx.y;\r\n    },\r\n    onEnd: ({ velocityX, velocityY }) => {\r\n      translateY.value = withSpring(0, {\r\n        velocity: velocityY,\r\n      });\r\n      const dest = snapPoint(translateX.value, velocityX, snapPoints);\r\n      translateX.value = withSpring(\r\n        dest,\r\n        {\r\n          overshootClamping: dest === 0 ? false : true,\r\n          restSpeedThreshold: dest === 0 ? 0.01 : 100,\r\n          restDisplacementThreshold: dest === 0 ? 0.01 : 100,\r\n        },\r\n        () => dest !== 0 && onSwipe()\r\n      );\r\n    },\r\n  });\r\n  const imageStyle = useAnimatedStyle(() => ({\r\n    transform: [\r\n      {\r\n        scale: interpolate(\r\n          position.value,\r\n          [0, step],\r\n          [1.2, 1],\r\n          Extrapolate.CLAMP\r\n        ),\r\n      },\r\n    ],\r\n  }));\r\n  const cardStyle = useAnimatedStyle(() => {\r\n    const scale = mix(position.value, 1, 0.9);\r\n    return {\r\n      transform: [\r\n        { translateY: translateY.value },\r\n        { translateX: translateX.value },\r\n        { scale },\r\n      ],\r\n      backgroundColor: mixColor(position.value, \"#C9E9E7\", \"#74BCB8\"),\r\n    };\r\n  });\r\n  return (\r\n    <Box\r\n      style={StyleSheet.absoluteFill}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <PanGestureHandler onGestureEvent={onGestureEvent}>\r\n        <Animated.View\r\n          style={[\r\n            {\r\n              width,\r\n              height,\r\n              borderRadius,\r\n              overflow: \"hidden\",\r\n            },\r\n            cardStyle,\r\n          ]}\r\n        >\r\n          <Animated.Image\r\n            {...{ source }}\r\n            style={[\r\n              {\r\n                ...StyleSheet.absoluteFillObject,\r\n                width: undefined,\r\n                height: undefined,\r\n              },\r\n              imageStyle,\r\n            ]}\r\n          />\r\n        </Animated.View>\r\n      </PanGestureHandler>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}