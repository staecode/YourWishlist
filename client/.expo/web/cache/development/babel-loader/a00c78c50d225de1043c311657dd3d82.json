{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cnamu\\\\OneDrive\\\\Documents\\\\Desktop\\\\SPRING 2021\\\\CS465P\\\\Final_Project\\\\YourWishlist\\\\client\\\\src\\\\Home\\\\EditProfile\\\\CheckboxGroup.tsx\";\n\nimport React, { useState } from \"react\";\nimport { Box, Button, useTheme } from \"../../components\";\n\nvar CheckboxGroup = function CheckboxGroup(_ref) {\n  var options = _ref.options,\n      radio = _ref.radio;\n  var theme = useTheme();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValues = _useState2[0],\n      setSelectedValues = _useState2[1];\n\n  return React.createElement(Box, {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginTop: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, options.map(function (_ref2) {\n    var label = _ref2.label,\n        value = _ref2.value;\n    var index = selectedValues.indexOf(value);\n    var isSelected = index !== -1;\n    return React.createElement(Button, {\n      key: value,\n      variant: isSelected ? \"primary\" : \"default\",\n      onPress: function onPress() {\n        if (radio) {\n          setSelectedValues([value]);\n        } else {\n          if (isSelected) {\n            selectedValues.splice(index, 1);\n          } else {\n            selectedValues.push(value);\n          }\n\n          setSelectedValues(_toConsumableArray(selectedValues));\n        }\n      },\n      label: label,\n      style: {\n        width: \"auto\",\n        height: \"auto\",\n        padding: 16,\n        marginBottom: theme.spacing.m,\n        marginRight: theme.spacing.s\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default CheckboxGroup;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/src/Home/EditProfile/CheckboxGroup.tsx"],"names":["React","useState","Box","Button","useTheme","CheckboxGroup","options","radio","theme","selectedValues","setSelectedValues","map","label","value","index","indexOf","isSelected","splice","push","width","height","padding","marginBottom","spacing","m","marginRight","s"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,QAAtB;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA4C;AAAA,MAAzCC,OAAyC,QAAzCA,OAAyC;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAChE,MAAMC,KAAK,GAAGJ,QAAQ,EAAtB;;AACA,kBAA4CH,QAAQ,CAAW,EAAX,CAApD;AAAA;AAAA,MAAOQ,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,SACE,oBAAC,GAAD;AAAK,IAAA,aAAa,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAC,MAAlC;AAAyC,IAAA,SAAS,EAAC,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,CAACK,GAAR,CAAY,iBAAsB;AAAA,QAAnBC,KAAmB,SAAnBA,KAAmB;AAAA,QAAZC,KAAY,SAAZA,KAAY;AACjC,QAAMC,KAAK,GAAGL,cAAc,CAACM,OAAf,CAAuBF,KAAvB,CAAd;AACA,QAAMG,UAAU,GAAGF,KAAK,KAAK,CAAC,CAA9B;AACA,WACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAED,KADP;AAEE,MAAA,OAAO,EAAEG,UAAU,GAAG,SAAH,GAAe,SAFpC;AAGE,MAAA,OAAO,EAAE,mBAAM;AACb,YAAIT,KAAJ,EAAW;AACTG,UAAAA,iBAAiB,CAAC,CAACG,KAAD,CAAD,CAAjB;AACD,SAFD,MAEO;AACL,cAAIG,UAAJ,EAAgB;AACdP,YAAAA,cAAc,CAACQ,MAAf,CAAsBH,KAAtB,EAA6B,CAA7B;AACD,WAFD,MAEO;AACLL,YAAAA,cAAc,CAACS,IAAf,CAAoBL,KAApB;AACD;;AACDH,UAAAA,iBAAiB,oBAAKD,cAAL,EAAjB;AACD;AACF,OAdH;AAeE,MAAA,KAAK,EAAEG,KAfT;AAgBE,MAAA,KAAK,EAAE;AACLO,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,OAAO,EAAE,EAHJ;AAILC,QAAAA,YAAY,EAAEd,KAAK,CAACe,OAAN,CAAcC,CAJvB;AAKLC,QAAAA,WAAW,EAAEjB,KAAK,CAACe,OAAN,CAAcG;AALtB,OAhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AA0BD,GA7BA,CADH,CADF;AAkCD,CArCD;;AAuCA,eAAerB,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Box, Button, useTheme } from \"../../components\";\r\n\r\ninterface CheckboxGroupProps {\r\n  options: { value: string; label: string }[];\r\n  radio?: boolean;\r\n}\r\n\r\nconst CheckboxGroup = ({ options, radio }: CheckboxGroupProps) => {\r\n  const theme = useTheme();\r\n  const [selectedValues, setSelectedValues] = useState<string[]>([]);\r\n  return (\r\n    <Box flexDirection=\"row\" flexWrap=\"wrap\" marginTop=\"s\">\r\n      {options.map(({ label, value }) => {\r\n        const index = selectedValues.indexOf(value);\r\n        const isSelected = index !== -1;\r\n        return (\r\n          <Button\r\n            key={value}\r\n            variant={isSelected ? \"primary\" : \"default\"}\r\n            onPress={() => {\r\n              if (radio) {\r\n                setSelectedValues([value]);\r\n              } else {\r\n                if (isSelected) {\r\n                  selectedValues.splice(index, 1);\r\n                } else {\r\n                  selectedValues.push(value);\r\n                }\r\n                setSelectedValues([...selectedValues]);\r\n              }\r\n            }}\r\n            label={label}\r\n            style={{\r\n              width: \"auto\",\r\n              height: \"auto\",\r\n              padding: 16,\r\n              marginBottom: theme.spacing.m,\r\n              marginRight: theme.spacing.s,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CheckboxGroup;\r\n"]},"metadata":{},"sourceType":"module"}