{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cnamu\\\\OneDrive\\\\Documents\\\\Desktop\\\\SPRING 2021\\\\CS465P\\\\Final_Project\\\\YourWishlist\\\\client\\\\src\\\\Authentication\\\\SignUp.tsx\";\n\nimport React, { useRef } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Container, Button, Text, Box } from \"../components\";\nimport TextInput from \"../components/Form/TextInput\";\nimport Footer from \"./components/Footer\";\nvar SignUpSchema = Yup.object().shape({\n  password: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  passwordConfirmation: Yup.string().equals([Yup.ref(\"password\")], \"Passwords don't match\").required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\")\n});\n\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFormik = useFormik({\n    validationSchema: SignUpSchema,\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      remember: true\n    },\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    }\n  }),\n      handleChange = _useFormik.handleChange,\n      handleBlur = _useFormik.handleBlur,\n      handleSubmit = _useFormik.handleSubmit,\n      errors = _useFormik.errors,\n      touched = _useFormik.touched;\n\n  var password = useRef(null);\n  var passwordConfirmation = useRef(null);\n  var footer = React.createElement(Footer, {\n    title: \"Already have an account?\",\n    action: \"Login here\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  });\n  return React.createElement(Container, {\n    pattern: 1,\n    footer: footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    variant: \"title1\",\n    textAlign: \"center\",\n    marginBottom: \"l\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Create account\"), React.createElement(Text, {\n    variant: \"body\",\n    textAlign: \"center\",\n    marginBottom: \"l\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Let\\u2019s us know what your name, email, and your password\"), React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(Box, {\n    marginBottom: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    icon: \"mail\",\n    placeholder: \"Enter your Email\",\n    onChangeText: handleChange(\"email\"),\n    onBlur: handleBlur(\"email\"),\n    error: errors.email,\n    touched: touched.email,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    returnKeyType: \"next\",\n    returnKeyLabel: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _password$current;\n\n      return (_password$current = password.current) == null ? void 0 : _password$current.focus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), React.createElement(Box, {\n    marginBottom: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    ref: password,\n    icon: \"lock\",\n    placeholder: \"Enter your Password\",\n    onChangeText: handleChange(\"password\"),\n    onBlur: handleBlur(\"password\"),\n    error: errors.password,\n    touched: touched.password,\n    autoCompleteType: \"password\",\n    autoCapitalize: \"none\",\n    returnKeyType: \"go\",\n    returnKeyLabel: \"go\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _passwordConfirmation;\n\n      return (_passwordConfirmation = passwordConfirmation.current) == null ? void 0 : _passwordConfirmation.focus();\n    },\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), React.createElement(Box, {\n    marginBottom: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    ref: passwordConfirmation,\n    icon: \"lock\",\n    placeholder: \"Confirm your Password\",\n    onChangeText: handleChange(\"passwordConfirmation\"),\n    onBlur: handleBlur(\"passwordConfirmation\"),\n    error: errors.passwordConfirmation,\n    touched: touched.passwordConfirmation,\n    autoCompleteType: \"password\",\n    autoCapitalize: \"none\",\n    returnKeyType: \"go\",\n    returnKeyLabel: \"go\",\n    onSubmitEditing: function onSubmitEditing() {\n      return handleSubmit();\n    },\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), React.createElement(Box, {\n    alignItems: \"center\",\n    marginTop: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    onPress: handleSubmit,\n    label: \"Create your account\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/src/Authentication/SignUp.tsx"],"names":["React","useRef","useFormik","Yup","Container","Button","Text","Box","TextInput","Footer","SignUpSchema","object","shape","password","string","min","max","required","passwordConfirmation","equals","ref","email","SignUp","navigation","validationSchema","initialValues","remember","onSubmit","values","console","log","handleChange","handleBlur","handleSubmit","errors","touched","footer","navigate","current","focus"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { TextInput as RNTextInput } from \"react-native\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Container, Button, Text, Box } from \"../components\";\r\nimport { AuthNavigationProps } from \"../components/Navigation\";\r\nimport TextInput from \"../components/Form/TextInput\";\r\n\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  passwordConfirmation: Yup.string()\r\n    .equals([Yup.ref(\"password\")], \"Passwords don't match\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n});\r\n\r\nconst SignUp = ({ navigation }: AuthNavigationProps<\"SignUp\">) => {\r\n  const { handleChange, handleBlur, handleSubmit, errors, touched } = useFormik(\r\n    {\r\n      validationSchema: SignUpSchema,\r\n      initialValues: {\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirmation: \"\",\r\n        remember: true,\r\n      },\r\n      onSubmit: (values) => console.log(values),\r\n    }\r\n  );\r\n  const password = useRef<RNTextInput>(null);\r\n  const passwordConfirmation = useRef<RNTextInput>(null);\r\n  const footer = (\r\n    <Footer\r\n      title=\"Already have an account?\"\r\n      action=\"Login here\"\r\n      onPress={() => navigation.navigate(\"Login\")}\r\n    />\r\n  );\r\n  return (\r\n    <Container pattern={1} {...{ footer }}>\r\n      <Text variant=\"title1\" textAlign=\"center\" marginBottom=\"l\">\r\n        Create account\r\n      </Text>\r\n      <Text variant=\"body\" textAlign=\"center\" marginBottom=\"l\">\r\n        Let’s us know what your name, email, and your password\r\n      </Text>\r\n      <Box>\r\n        <Box marginBottom=\"m\">\r\n          <TextInput\r\n            icon=\"mail\"\r\n            placeholder=\"Enter your Email\"\r\n            onChangeText={handleChange(\"email\")}\r\n            onBlur={handleBlur(\"email\")}\r\n            error={errors.email}\r\n            touched={touched.email}\r\n            autoCapitalize=\"none\"\r\n            autoCompleteType=\"email\"\r\n            returnKeyType=\"next\"\r\n            returnKeyLabel=\"next\"\r\n            onSubmitEditing={() => password.current?.focus()}\r\n          />\r\n        </Box>\r\n\r\n        <Box marginBottom=\"m\">\r\n          <TextInput\r\n            ref={password}\r\n            icon=\"lock\"\r\n            placeholder=\"Enter your Password\"\r\n            onChangeText={handleChange(\"password\")}\r\n            onBlur={handleBlur(\"password\")}\r\n            error={errors.password}\r\n            touched={touched.password}\r\n            autoCompleteType=\"password\"\r\n            autoCapitalize=\"none\"\r\n            returnKeyType=\"go\"\r\n            returnKeyLabel=\"go\"\r\n            onSubmitEditing={() => passwordConfirmation.current?.focus()}\r\n            secureTextEntry\r\n          />\r\n        </Box>\r\n\r\n        <Box marginBottom=\"m\">\r\n          <TextInput\r\n            ref={passwordConfirmation}\r\n            icon=\"lock\"\r\n            placeholder=\"Confirm your Password\"\r\n            onChangeText={handleChange(\"passwordConfirmation\")}\r\n            onBlur={handleBlur(\"passwordConfirmation\")}\r\n            error={errors.passwordConfirmation}\r\n            touched={touched.passwordConfirmation}\r\n            autoCompleteType=\"password\"\r\n            autoCapitalize=\"none\"\r\n            returnKeyType=\"go\"\r\n            returnKeyLabel=\"go\"\r\n            onSubmitEditing={() => handleSubmit()}\r\n            secureTextEntry\r\n          />\r\n        </Box>\r\n        <Box alignItems=\"center\" marginTop=\"m\">\r\n          <Button\r\n            variant=\"primary\"\r\n            onPress={handleSubmit}\r\n            label=\"Create your account\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}