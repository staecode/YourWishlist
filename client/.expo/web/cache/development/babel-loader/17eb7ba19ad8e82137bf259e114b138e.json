{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cnamu\\\\OneDrive\\\\Documents\\\\Desktop\\\\SPRING 2021\\\\CS465P\\\\Final_Project\\\\YourWishlist\\\\client\\\\src\\\\components\\\\Form\\\\TextInput.tsx\";\n\nimport React, { forwardRef } from \"react\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Feather as Icon } from \"@expo/vector-icons\";\nimport { Box, useTheme } from \"..\";\nimport RoundedIcon from \"../RoundedIcon\";\nimport { Text } from \"../Theme\";\nvar TextInput = forwardRef(function (_ref, ref) {\n  var icon = _ref.icon,\n      touched = _ref.touched,\n      error = _ref.error,\n      props = _objectWithoutProperties(_ref, [\"icon\", \"touched\", \"error\"]);\n\n  var theme = useTheme();\n  var SIZE = theme.borderRadii.m * 2.5;\n  var validationColor = error ? \"danger\" : \"primary\";\n  var color = !touched ? \"text\" : validationColor;\n  return React.createElement(Box, {\n    flexDirection: \"row\",\n    height: 48,\n    alignItems: \"center\",\n    borderRadius: \"s\",\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: color,\n    padding: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Box, {\n    padding: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    color: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: icon,\n    size: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }))), React.createElement(Box, {\n    flex: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(RNTextInput, _extends({\n    underlineColorAndroid: \"transparent\",\n    placeholderTextColor: theme.colors[color],\n    ref: ref\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))), touched && React.createElement(RoundedIcon, {\n    name: !error ? \"check\" : \"x\",\n    size: SIZE,\n    backgroundColor: !error ? \"primary\" : \"danger\",\n    color: \"background\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }));\n});\nexport default TextInput;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/src/components/Form/TextInput.tsx"],"names":["React","forwardRef","Feather","Icon","Box","useTheme","RoundedIcon","Text","TextInput","ref","icon","touched","error","props","theme","SIZE","borderRadii","m","validationColor","color","StyleSheet","hairlineWidth","colors"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAMA,SAASC,OAAO,IAAIC,IAApB,QAAgC,oBAAhC;AAEA,SAASC,GAAT,EAAcC,QAAd,QAA8B,IAA9B;AACA,OAAOC,WAAP;AACA,SAASC,IAAT;AAQA,IAAMC,SAAS,GAAGP,UAAU,CAC1B,gBAAqCQ,GAArC,EAA6C;AAAA,MAA1CC,IAA0C,QAA1CA,IAA0C;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAAjBC,KAAiB;;AAC3C,MAAMC,KAAK,GAAGT,QAAQ,EAAtB;AACA,MAAMU,IAAI,GAAGD,KAAK,CAACE,WAAN,CAAkBC,CAAlB,GAAsB,GAAnC;AACA,MAAMC,eAAe,GAAGN,KAAK,GAAG,QAAH,GAAc,SAA3C;AACA,MAAMO,KAAK,GAAG,CAACR,OAAD,GAAW,MAAX,GAAoBO,eAAlC;AACA,SACE,oBAAC,GAAD;AACE,IAAA,aAAa,EAAC,KADhB;AAEE,IAAA,MAAM,EAAE,EAFV;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,YAAY,EAAC,GAJf;AAKE,IAAA,WAAW,EAAEE,UAAU,CAACC,aAL1B;AAME,IAAA,WAAW,EAAEF,KANf;AAOE,IAAA,OAAO,EAAC,GAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAYA,IAAAA,KAAK,EAALA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAET,IAAZ;AAAkB,IAAA,IAAI,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,EAcE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,qBAAqB,EAAC,aADxB;AAEE,IAAA,oBAAoB,EAAEI,KAAK,CAACQ,MAAN,CAAaH,KAAb,CAFxB;AAGQV,IAAAA,GAAG,EAAHA;AAHR,KAIMI,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAdF,EAsBGF,OAAO,IACN,oBAAC,WAAD;AACE,IAAA,IAAI,EAAE,CAACC,KAAD,GAAS,OAAT,GAAmB,GAD3B;AAEE,IAAA,IAAI,EAAEG,IAFR;AAGE,IAAA,eAAe,EAAE,CAACH,KAAD,GAAS,SAAT,GAAqB,QAHxC;AAIE,IAAA,KAAK,EAAC,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,CADF;AAiCD,CAvCyB,CAA5B;AA0CA,eAAeJ,SAAf","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport {\r\n  TextInput as RNTextInput,\r\n  StyleSheet,\r\n  TextInputProps as RNTextInputProps,\r\n} from \"react-native\";\r\nimport { Feather as Icon } from \"@expo/vector-icons\";\r\n\r\nimport { Box, useTheme } from \"..\";\r\nimport RoundedIcon from \"../RoundedIcon\";\r\nimport { Text } from \"../Theme\";\r\n\r\ninterface TextInputProps extends RNTextInputProps {\r\n  icon: string;\r\n  touched?: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst TextInput = forwardRef<RNTextInput, TextInputProps>(\r\n  ({ icon, touched, error, ...props }, ref) => {\r\n    const theme = useTheme();\r\n    const SIZE = theme.borderRadii.m * 2.5;\r\n    const validationColor = error ? \"danger\" : \"primary\";\r\n    const color = !touched ? \"text\" : validationColor;\r\n    return (\r\n      <Box\r\n        flexDirection=\"row\"\r\n        height={48}\r\n        alignItems=\"center\"\r\n        borderRadius=\"s\"\r\n        borderWidth={StyleSheet.hairlineWidth}\r\n        borderColor={color}\r\n        padding=\"s\"\r\n      >\r\n        <Box padding=\"s\">\r\n          <Text {...{ color }}>\r\n            <Icon name={icon} size={16} />\r\n          </Text>\r\n        </Box>\r\n        <Box flex={1}>\r\n          <RNTextInput\r\n            underlineColorAndroid=\"transparent\"\r\n            placeholderTextColor={theme.colors[color]}\r\n            {...{ ref }}\r\n            {...props}\r\n          />\r\n        </Box>\r\n        {touched && (\r\n          <RoundedIcon\r\n            name={!error ? \"check\" : \"x\"}\r\n            size={SIZE}\r\n            backgroundColor={!error ? \"primary\" : \"danger\"}\r\n            color=\"background\"\r\n          />\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TextInput;\r\n"]},"metadata":{},"sourceType":"module"}