{"ast":null,"code":"export var animationParameter = function () {\n  var _f = function _f(animationParam) {\n    if (typeof animationParam === \"number\") {\n      throw new Error(\"Expected Animation as parameter\");\n    }\n\n    return typeof animationParam === \"function\" ? animationParam() : animationParam;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function animationParameter(animationParam){if(typeof animationParam===\\\"number\\\"){throw new Error(\\\"Expected Animation as parameter\\\");}return typeof animationParam===\\\"function\\\"?animationParam():animationParam;}\";\n  _f.__workletHash = 16964105267043;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var defineAnimation = function () {\n  var _f = function _f(factory) {\n    if (_WORKLET) {\n      return factory();\n    }\n\n    return factory;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function defineAnimation(factory){if(_WORKLET){return factory();}return factory;}\";\n  _f.__workletHash = 2039129594575;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var withPause = function () {\n  var _f = function _f(animationParam, paused) {\n    return defineAnimation(function () {\n      var _f = function _f() {\n        var nextAnimation = animationParameter(animationParam);\n\n        var animation = function animation(state, now) {\n          var lastTimestamp = state.lastTimestamp,\n              elapsed = state.elapsed;\n\n          if (paused.value) {\n            state.elapsed = now - lastTimestamp;\n            return false;\n          }\n\n          var dt = now - elapsed;\n          var finished = nextAnimation.animation(nextAnimation, dt);\n          state.current = nextAnimation.current;\n          state.lastTimestamp = dt;\n          return finished;\n        };\n\n        var start = function start(state, value, now, previousState) {\n          state.lastTimestamp = now;\n          state.elapsed = 0;\n          nextAnimation.start(nextAnimation, value, now, previousState);\n        };\n\n        return {\n          animation: animation,\n          start: start\n        };\n      };\n\n      _f._closure = {\n        animationParameter: animationParameter,\n        animationParam: animationParam,\n        paused: paused\n      };\n      _f.asString = \"function _f(){const{animationParameter,animationParam,paused}=jsThis._closure;{var nextAnimation=animationParameter(animationParam);var animation=function animation(state,now){var lastTimestamp=state.lastTimestamp,elapsed=state.elapsed;if(paused.value){state.elapsed=now-lastTimestamp;return false;}var dt=now-elapsed;var finished=nextAnimation.animation(nextAnimation,dt);state.current=nextAnimation.current;state.lastTimestamp=dt;return finished;};var start=function start(state,value,now,previousState){state.lastTimestamp=now;state.elapsed=0;nextAnimation.start(nextAnimation,value,now,previousState);};return{animation:animation,start:start};}}\";\n      _f.__workletHash = 13162127964174;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }());\n  };\n\n  _f._closure = {\n    defineAnimation: defineAnimation,\n    animationParameter: animationParameter\n  };\n  _f.asString = \"function withPause(animationParam,paused){const{defineAnimation,animationParameter}=jsThis._closure;{return defineAnimation(function(){var _f=function _f(){var nextAnimation=animationParameter(animationParam);var animation=function animation(state,now){var lastTimestamp=state.lastTimestamp,elapsed=state.elapsed;if(paused.value){state.elapsed=now-lastTimestamp;return false;}var dt=now-elapsed;var finished=nextAnimation.animation(nextAnimation,dt);state.current=nextAnimation.current;state.lastTimestamp=dt;return finished;};var start=function start(state,value,now,previousState){state.lastTimestamp=now;state.elapsed=0;nextAnimation.start(nextAnimation,value,now,previousState);};return{animation:animation,start:start};};_f._closure={animationParameter:animationParameter,animationParam:animationParam,paused:paused};_f.asString=\\\"function _f(){const{animationParameter,animationParam,paused}=jsThis._closure;{var nextAnimation=animationParameter(animationParam);var animation=function animation(state,now){var lastTimestamp=state.lastTimestamp,elapsed=state.elapsed;if(paused.value){state.elapsed=now-lastTimestamp;return false;}var dt=now-elapsed;var finished=nextAnimation.animation(nextAnimation,dt);state.current=nextAnimation.current;state.lastTimestamp=dt;return finished;};var start=function start(state,value,now,previousState){state.lastTimestamp=now;state.elapsed=0;nextAnimation.start(nextAnimation,value,now,previousState);};return{animation:animation,start:start};}}\\\";_f.__workletHash=13162127964174;global.__reanimatedWorkletInit(_f);return _f;}());}}\";\n  _f.__workletHash = 11474614323036;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var withBouncing = function () {\n  var _f = function _f(animationParam, lowerBound, upperBound) {\n    return defineAnimation(function () {\n      var _f = function _f() {\n        var nextAnimation = animationParameter(animationParam);\n\n        var animation = function animation(state, now) {\n          var finished = nextAnimation.animation(nextAnimation, now);\n          var velocity = nextAnimation.velocity,\n              current = nextAnimation.current;\n          state.current = current;\n\n          if (velocity < 0 && state.current <= lowerBound || velocity > 0 && state.current >= upperBound) {\n            state.current = velocity < 0 ? lowerBound : upperBound;\n            nextAnimation.velocity *= -0.5;\n          }\n\n          return finished;\n        };\n\n        var start = function start(_state, value, now, previousState) {\n          nextAnimation.start(nextAnimation, value, now, previousState);\n        };\n\n        return {\n          animation: animation,\n          start: start\n        };\n      };\n\n      _f._closure = {\n        animationParameter: animationParameter,\n        animationParam: animationParam,\n        lowerBound: lowerBound,\n        upperBound: upperBound\n      };\n      _f.asString = \"function _f(){const{animationParameter,animationParam,lowerBound,upperBound}=jsThis._closure;{var nextAnimation=animationParameter(animationParam);var animation=function animation(state,now){var finished=nextAnimation.animation(nextAnimation,now);var velocity=nextAnimation.velocity,current=nextAnimation.current;state.current=current;if(velocity<0&&state.current<=lowerBound||velocity>0&&state.current>=upperBound){state.current=velocity<0?lowerBound:upperBound;nextAnimation.velocity*=-0.5;}return finished;};var start=function start(_state,value,now,previousState){nextAnimation.start(nextAnimation,value,now,previousState);};return{animation:animation,start:start};}}\";\n      _f.__workletHash = 9001378824077;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }());\n  };\n\n  _f._closure = {\n    defineAnimation: defineAnimation,\n    animationParameter: animationParameter\n  };\n  _f.asString = \"function withBouncing(animationParam,lowerBound,upperBound){const{defineAnimation,animationParameter}=jsThis._closure;{return defineAnimation(function(){var _f=function _f(){var nextAnimation=animationParameter(animationParam);var animation=function animation(state,now){var finished=nextAnimation.animation(nextAnimation,now);var velocity=nextAnimation.velocity,current=nextAnimation.current;state.current=current;if(velocity<0&&state.current<=lowerBound||velocity>0&&state.current>=upperBound){state.current=velocity<0?lowerBound:upperBound;nextAnimation.velocity*=-0.5;}return finished;};var start=function start(_state,value,now,previousState){nextAnimation.start(nextAnimation,value,now,previousState);};return{animation:animation,start:start};};_f._closure={animationParameter:animationParameter,animationParam:animationParam,lowerBound:lowerBound,upperBound:upperBound};_f.asString=\\\"function _f(){const{animationParameter,animationParam,lowerBound,upperBound}=jsThis._closure;{var nextAnimation=animationParameter(animationParam);var animation=function animation(state,now){var finished=nextAnimation.animation(nextAnimation,now);var velocity=nextAnimation.velocity,current=nextAnimation.current;state.current=current;if(velocity<0&&state.current<=lowerBound||velocity>0&&state.current>=upperBound){state.current=velocity<0?lowerBound:upperBound;nextAnimation.velocity*=-0.5;}return finished;};var start=function start(_state,value,now,previousState){nextAnimation.start(nextAnimation,value,now,previousState);};return{animation:animation,start:start};}}\\\";_f.__workletHash=9001378824077;global.__reanimatedWorkletInit(_f);return _f;}());}}\";\n  _f.__workletHash = 3325557478173;\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();","map":{"version":3,"sources":["Animations.ts"],"names":["animationParameter","animationParam","defineAnimation","factory","withPause","nextAnimation","animation","lastTimestamp","elapsed","state","paused","now","dt","finished","start","withBouncing","velocity","current"],"mappings":"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","sourcesContent":["import Animated from \"react-native-reanimated\";\n\ndeclare let _WORKLET: boolean;\n\nexport interface AnimationState {\n  current: number;\n}\n\nexport interface PhysicsAnimationState extends AnimationState {\n  velocity: number;\n}\n\nexport type Animation<\n  State extends AnimationState = AnimationState,\n  PrevState = State\n> = {\n  animation: (animation: State, now: number) => boolean;\n  start: (\n    animation: State,\n    value: number,\n    now: number,\n    lastAnimation: PrevState\n  ) => void;\n} & State;\n\nexport type AnimationParameter<State extends AnimationState = AnimationState> =\n  | Animation<State>\n  | (() => Animation<State>)\n  | number;\n\n/**\n *  @summary Access animations passed as parameters safely on both the UI and JS thread with the proper static types.\n *  Animations can receive other animations as parameter.\n */\nexport const animationParameter = <\n  State extends AnimationState = AnimationState\n>(\n  animationParam: AnimationParameter<State>\n) => {\n  \"worklet\";\n  if (typeof animationParam === \"number\") {\n    throw new Error(\"Expected Animation as parameter\");\n  }\n  return typeof animationParam === \"function\"\n    ? animationParam()\n    : animationParam;\n};\n\n/**\n *  @summary Declare custom animations that can be invoked on both the JS and UI thread.\n *  @example\n *  defineAnimation(() => {\n      \"worklet\";\n      // ...animation code\n      return {\n        animation,\n       start\n      }\n    });\n */\nexport const defineAnimation = <\n  S extends AnimationState = AnimationState,\n  Prev extends AnimationState = AnimationState\n>(\n  factory: () => Omit<Animation<S, Prev>, keyof S>\n) => {\n  \"worklet\";\n  if (_WORKLET) {\n    return (factory() as unknown) as number;\n  }\n  return (factory as unknown) as number;\n};\n\ninterface PausableAnimation extends AnimationState {\n  lastTimestamp: number;\n  elapsed: number;\n}\n\n/**\n *  @summary Make an animation pausable. The state of the animation (paused or not)\n *  is controlled by a boolean shared value.\n *  @example\n    const progress = useSharedValue(0);\n    const paused = useSharedValue(false);\n    useEffect(() => {\n      progress.value = withPause(withLoop(withTiming(1)), paused);\n    }, []);\n */\nexport const withPause = (\n  animationParam: AnimationParameter,\n  paused: Animated.SharedValue<boolean>\n) => {\n  \"worklet\";\n  return defineAnimation<PausableAnimation>(() => {\n    \"worklet\";\n    const nextAnimation = animationParameter(animationParam);\n    const animation = (state: PausableAnimation, now: number) => {\n      const { lastTimestamp, elapsed } = state;\n      if (paused.value) {\n        state.elapsed = now - lastTimestamp;\n        return false;\n      }\n      const dt = now - elapsed;\n      const finished = nextAnimation.animation(nextAnimation, dt);\n      state.current = nextAnimation.current;\n      state.lastTimestamp = dt;\n      return finished;\n    };\n    const start = (\n      state: PausableAnimation,\n      value: number,\n      now: number,\n      previousState: AnimationState\n    ) => {\n      state.lastTimestamp = now;\n      state.elapsed = 0;\n      nextAnimation.start(nextAnimation, value, now, previousState);\n    };\n    return {\n      animation,\n      start,\n    };\n  });\n};\n\n/**\n *  @summary Add a bouncing behavior to a physics-based animation.\n *  An animation is defined as being physics-based if it contains a velocity in its state.\n *  @example\n    // will bounce if the animations hits the position 0 or 100\n    withBouncing(withDecay({ velocity }), 0, 100)\n */\nexport const withBouncing = (\n  animationParam: AnimationParameter<PhysicsAnimationState>,\n  lowerBound: number,\n  upperBound: number\n): number => {\n  \"worklet\";\n  return defineAnimation<PhysicsAnimationState, PhysicsAnimationState>(() => {\n    \"worklet\";\n    const nextAnimation = animationParameter(animationParam);\n    const animation = (state: PhysicsAnimationState, now: number) => {\n      const finished = nextAnimation.animation(nextAnimation, now);\n      const { velocity, current } = nextAnimation;\n      state.current = current;\n      if (\n        (velocity < 0 && state.current <= lowerBound) ||\n        (velocity > 0 && state.current >= upperBound)\n      ) {\n        state.current = velocity < 0 ? lowerBound : upperBound;\n        nextAnimation.velocity *= -0.5;\n      }\n      return finished;\n    };\n    const start = (\n      _state: PhysicsAnimationState,\n      value: number,\n      now: number,\n      previousState: PhysicsAnimationState\n    ) => {\n      nextAnimation.start(nextAnimation, value, now, previousState);\n    };\n    return {\n      animation,\n      start,\n    };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}