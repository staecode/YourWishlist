{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cnamu\\\\OneDrive\\\\Documents\\\\Desktop\\\\SPRING 2021\\\\CS465P\\\\Final_Project\\\\YourWishlist\\\\client\\\\src\\\\Home\\\\TransactionHistory\\\\Graph\\\\Graph.tsx\";\n\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport moment from \"moment\";\nimport Animated, { useAnimatedStyle, useSharedValue, withTiming } from \"react-native-reanimated\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { useTheme, Box } from \"../../../components\";\nimport Underlay, { MARGIN } from \"./Underlay\";\nimport { lerp } from \"./Scale\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    wWidth = _Dimensions$get.width;\n\nvar aspectRatio = 195 / 305;\nvar AnimatedBox = Animated.createAnimatedComponent(Box);\n\nvar Graph = function Graph(_ref) {\n  var data = _ref.data,\n      startDate = _ref.startDate,\n      numberOfMonths = _ref.numberOfMonths;\n  var transition = useSharedValue(0);\n  useFocusEffect(function () {\n    transition.value = withTiming(1, {\n      duration: 650\n    });\n    return function () {\n      return transition.value = 0;\n    };\n  });\n  var theme = useTheme();\n  var canvasWidth = wWidth - theme.spacing.m * 2;\n  var canvasHeight = canvasWidth * aspectRatio;\n  var width = canvasWidth - theme.spacing[MARGIN];\n  var height = canvasHeight - theme.spacing[MARGIN];\n  var step = width / numberOfMonths;\n  var values = data.map(function (p) {\n    return p.value;\n  });\n  var minY = Math.min.apply(Math, _toConsumableArray(values));\n  var maxY = Math.max.apply(Math, _toConsumableArray(values));\n  return React.createElement(Box, {\n    marginTop: \"xl\",\n    paddingBottom: MARGIN,\n    paddingLeft: MARGIN,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Underlay, {\n    minY: minY,\n    maxY: maxY,\n    startDate: startDate,\n    numberOfMonths: numberOfMonths,\n    step: step,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      width: width,\n      height: height,\n      overflow: \"hidden\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, data.map(function (point) {\n    var i = Math.round(moment.duration(moment(point.date).diff(startDate)).asMonths());\n    var totalHeight = lerp(0, height, point.value / maxY);\n    var style = useAnimatedStyle(function () {\n      var _f = function _f() {\n        var currentHeight = totalHeight * transition.value;\n        var translateY = (totalHeight - currentHeight) / 2;\n        return {\n          transform: [{\n            translateY: translateY\n          }, {\n            scaleY: transition.value\n          }]\n        };\n      };\n\n      _f._closure = {\n        totalHeight: totalHeight,\n        transition: transition\n      };\n      _f.asString = \"function _f(){const{totalHeight,transition}=jsThis._closure;{var currentHeight=totalHeight*transition.value;var translateY=(totalHeight-currentHeight)/2;return{transform:[{translateY:translateY},{scaleY:transition.value}]};}}\";\n      _f.__workletHash = 15100553305623;\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }());\n    return React.createElement(AnimatedBox, {\n      key: point.id,\n      position: \"absolute\",\n      left: i * step,\n      bottom: 0,\n      width: step,\n      height: totalHeight,\n      style: style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, React.createElement(Box, {\n      backgroundColor: point.color,\n      position: \"absolute\",\n      opacity: 0.1,\n      top: 0,\n      bottom: 0,\n      borderTopLeftRadius: \"m\",\n      borderTopRightRadius: \"m\",\n      left: theme.spacing.m,\n      right: theme.spacing.m,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }), React.createElement(Box, {\n      backgroundColor: point.color,\n      position: \"absolute\",\n      top: 0,\n      height: 32,\n      left: theme.spacing.m,\n      right: theme.spacing.m,\n      borderRadius: \"m\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/src/Home/TransactionHistory/Graph/Graph.tsx"],"names":["React","moment","Animated","useAnimatedStyle","useSharedValue","withTiming","useFocusEffect","useTheme","Box","Underlay","MARGIN","lerp","Dimensions","get","wWidth","width","aspectRatio","AnimatedBox","createAnimatedComponent","Graph","data","startDate","numberOfMonths","transition","value","duration","theme","canvasWidth","spacing","m","canvasHeight","height","step","values","map","p","minY","Math","min","maxY","max","overflow","point","i","round","date","diff","asMonths","totalHeight","style","currentHeight","translateY","transform","scaleY","id","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Dimensions, View } from \"react-native\";\r\nimport moment from \"moment\";\r\nimport Animated, {\r\n  useAnimatedStyle,\r\n  useSharedValue,\r\n  withTiming,\r\n} from \"react-native-reanimated\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\n\r\nimport { useTheme, Box } from \"../../../components\";\r\nimport { Theme } from \"../../../components/Theme\";\r\n\r\nimport Underlay, { MARGIN } from \"./Underlay\";\r\nimport { lerp } from \"./Scale\";\r\n\r\nconst { width: wWidth } = Dimensions.get(\"window\");\r\nconst aspectRatio = 195 / 305;\r\nconst AnimatedBox = Animated.createAnimatedComponent(Box);\r\n\r\nexport interface DataPoint {\r\n  date: number;\r\n  value: number;\r\n  color: keyof Theme[\"colors\"];\r\n  id: number;\r\n}\r\n\r\ninterface GraphProps {\r\n  data: DataPoint[];\r\n  startDate: number;\r\n  numberOfMonths: number;\r\n}\r\n\r\nconst Graph = ({ data, startDate, numberOfMonths }: GraphProps) => {\r\n  const transition = useSharedValue(0);\r\n  useFocusEffect(() => {\r\n    transition.value = withTiming(1, { duration: 650 });\r\n    return () => (transition.value = 0);\r\n  });\r\n  const theme = useTheme();\r\n  const canvasWidth = wWidth - theme.spacing.m * 2;\r\n  const canvasHeight = canvasWidth * aspectRatio;\r\n  const width = canvasWidth - theme.spacing[MARGIN];\r\n  const height = canvasHeight - theme.spacing[MARGIN];\r\n  const step = width / numberOfMonths;\r\n  const values = data.map((p) => p.value);\r\n  // const dates = data.map((p) => p.date);\r\n  const minY = Math.min(...values);\r\n  const maxY = Math.max(...values);\r\n\r\n  return (\r\n    <Box marginTop=\"xl\" paddingBottom={MARGIN} paddingLeft={MARGIN}>\r\n      <Underlay\r\n        minY={minY}\r\n        maxY={maxY}\r\n        startDate={startDate}\r\n        numberOfMonths={numberOfMonths}\r\n        step={step}\r\n      />\r\n      <View style={{ width, height, overflow: \"hidden\" }}>\r\n        {data.map((point) => {\r\n          const i = Math.round(\r\n            moment.duration(moment(point.date).diff(startDate)).asMonths()\r\n          );\r\n          const totalHeight = lerp(0, height, point.value / maxY);\r\n          // eslint-disable-next-line react-hooks/rules-of-hooks\r\n          const style = useAnimatedStyle(() => {\r\n            const currentHeight = totalHeight * transition.value;\r\n            const translateY = (totalHeight - currentHeight) / 2;\r\n            return {\r\n              transform: [{ translateY }, { scaleY: transition.value }],\r\n            };\r\n          });\r\n          return (\r\n            <AnimatedBox\r\n              key={point.id}\r\n              position=\"absolute\"\r\n              left={i * step}\r\n              bottom={0}\r\n              width={step}\r\n              height={totalHeight}\r\n              style={style}\r\n            >\r\n              <Box\r\n                backgroundColor={point.color}\r\n                position=\"absolute\"\r\n                opacity={0.1}\r\n                top={0}\r\n                bottom={0}\r\n                borderTopLeftRadius=\"m\"\r\n                borderTopRightRadius=\"m\"\r\n                left={theme.spacing.m}\r\n                right={theme.spacing.m}\r\n              />\r\n              <Box\r\n                backgroundColor={point.color}\r\n                position=\"absolute\"\r\n                top={0}\r\n                height={32}\r\n                left={theme.spacing.m}\r\n                right={theme.spacing.m}\r\n                borderRadius=\"m\"\r\n              />\r\n            </AnimatedBox>\r\n          );\r\n        })}\r\n      </View>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"]},"metadata":{},"sourceType":"module"}