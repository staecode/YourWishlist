{"ast":null,"code":"import { TurboModuleRegistry } from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport reanimatedJS from \"./js-reanimated\";\nvar InnerNativeModule = Platform.OS === 'web' ? false : global.__reanimatedModuleProxy || TurboModuleRegistry.getEnforcing('NativeReanimated');\nvar NativeReanimated = {\n  native: !!InnerNativeModule,\n  installCoreFunctions: function installCoreFunctions(valueSetter) {\n    return InnerNativeModule.installCoreFunctions(valueSetter);\n  },\n  makeShareable: function makeShareable(value) {\n    return InnerNativeModule.makeShareable(value);\n  },\n  makeMutable: function makeMutable(value) {\n    return InnerNativeModule.makeMutable(value);\n  },\n  makeRemote: function makeRemote(object) {\n    return InnerNativeModule.makeRemote(object);\n  },\n  startMapper: function startMapper(mapper) {\n    var inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return InnerNativeModule.startMapper(mapper, inputs, outputs);\n  },\n  stopMapper: function stopMapper(mapperId) {\n    return InnerNativeModule.stopMapper(mapperId);\n  },\n  registerEventHandler: function registerEventHandler(eventHash, eventHandler) {\n    return InnerNativeModule.registerEventHandler(eventHash, eventHandler);\n  },\n  unregisterEventHandler: function unregisterEventHandler(registrationId) {\n    return InnerNativeModule.unregisterEventHandler(registrationId);\n  },\n  getViewProp: function getViewProp(viewTag, propName, callback) {\n    return InnerNativeModule.getViewProp(viewTag, propName, callback);\n  }\n};\nexport default NativeReanimated.native ? NativeReanimated : reanimatedJS;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/node_modules/react-native-reanimated/src/reanimated2/NativeReanimated.js"],"names":["TurboModuleRegistry","reanimatedJS","InnerNativeModule","Platform","OS","global","__reanimatedModuleProxy","getEnforcing","NativeReanimated","native","installCoreFunctions","valueSetter","makeShareable","value","makeMutable","makeRemote","object","startMapper","mapper","inputs","outputs","stopMapper","mapperId","registerEventHandler","eventHash","eventHandler","unregisterEventHandler","registrationId","getViewProp","viewTag","propName","callback"],"mappings":"SAASA,mB;;AACT,OAAOC,YAAP;AAEA,IAAMC,iBAAiB,GACrBC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACI,KADJ,GAEIC,MAAM,CAACC,uBAAP,IACAN,mBAAmB,CAACO,YAApB,CAAiC,kBAAjC,CAJN;AAMA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,MAAM,EAAE,CAAC,CAACP,iBADa;AAGvBQ,EAAAA,oBAHuB,gCAGFC,WAHE,EAGW;AAChC,WAAOT,iBAAiB,CAACQ,oBAAlB,CAAuCC,WAAvC,CAAP;AACD,GALsB;AAOvBC,EAAAA,aAPuB,yBAOTC,KAPS,EAOF;AACnB,WAAOX,iBAAiB,CAACU,aAAlB,CAAgCC,KAAhC,CAAP;AACD,GATsB;AAWvBC,EAAAA,WAXuB,uBAWXD,KAXW,EAWJ;AACjB,WAAOX,iBAAiB,CAACY,WAAlB,CAA8BD,KAA9B,CAAP;AACD,GAbsB;AAevBE,EAAAA,UAfuB,sBAeZC,MAfY,EAeJ;AACjB,WAAOd,iBAAiB,CAACa,UAAlB,CAA6BC,MAA7B,CAAP;AACD,GAjBsB;AAmBvBC,EAAAA,WAnBuB,uBAmBXC,MAnBW,EAmBwB;AAAA,QAA3BC,MAA2B,uEAAlB,EAAkB;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC7C,WAAOlB,iBAAiB,CAACe,WAAlB,CAA8BC,MAA9B,EAAsCC,MAAtC,EAA8CC,OAA9C,CAAP;AACD,GArBsB;AAuBvBC,EAAAA,UAvBuB,sBAuBZC,QAvBY,EAuBF;AACnB,WAAOpB,iBAAiB,CAACmB,UAAlB,CAA6BC,QAA7B,CAAP;AACD,GAzBsB;AA2BvBC,EAAAA,oBA3BuB,gCA2BFC,SA3BE,EA2BSC,YA3BT,EA2BuB;AAC5C,WAAOvB,iBAAiB,CAACqB,oBAAlB,CAAuCC,SAAvC,EAAkDC,YAAlD,CAAP;AACD,GA7BsB;AA+BvBC,EAAAA,sBA/BuB,kCA+BAC,cA/BA,EA+BgB;AACrC,WAAOzB,iBAAiB,CAACwB,sBAAlB,CAAyCC,cAAzC,CAAP;AACD,GAjCsB;AAmCvBC,EAAAA,WAnCuB,uBAmCXC,OAnCW,EAmCFC,QAnCE,EAmCQC,QAnCR,EAmCkB;AACvC,WAAO7B,iBAAiB,CAAC0B,WAAlB,CAA8BC,OAA9B,EAAuCC,QAAvC,EAAiDC,QAAjD,CAAP;AACD;AArCsB,CAAzB;AAwCA,eAAevB,gBAAgB,CAACC,MAAjB,GAA0BD,gBAA1B,GAA6CP,YAA5D","sourcesContent":["import { TurboModuleRegistry, Platform } from 'react-native';\nimport reanimatedJS from './js-reanimated';\n\nconst InnerNativeModule =\n  Platform.OS === 'web'\n    ? false\n    : global.__reanimatedModuleProxy ||\n      TurboModuleRegistry.getEnforcing('NativeReanimated');\n\nconst NativeReanimated = {\n  native: !!InnerNativeModule,\n\n  installCoreFunctions(valueSetter) {\n    return InnerNativeModule.installCoreFunctions(valueSetter);\n  },\n\n  makeShareable(value) {\n    return InnerNativeModule.makeShareable(value);\n  },\n\n  makeMutable(value) {\n    return InnerNativeModule.makeMutable(value);\n  },\n\n  makeRemote(object) {\n    return InnerNativeModule.makeRemote(object);\n  },\n\n  startMapper(mapper, inputs = [], outputs = []) {\n    return InnerNativeModule.startMapper(mapper, inputs, outputs);\n  },\n\n  stopMapper(mapperId) {\n    return InnerNativeModule.stopMapper(mapperId);\n  },\n\n  registerEventHandler(eventHash, eventHandler) {\n    return InnerNativeModule.registerEventHandler(eventHash, eventHandler);\n  },\n\n  unregisterEventHandler(registrationId) {\n    return InnerNativeModule.unregisterEventHandler(registrationId);\n  },\n\n  getViewProp(viewTag, propName, callback) {\n    return InnerNativeModule.getViewProp(viewTag, propName, callback);\n  },\n};\n\nexport default NativeReanimated.native ? NativeReanimated : reanimatedJS;\n"]},"metadata":{},"sourceType":"module"}