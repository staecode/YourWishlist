{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cnamu\\\\OneDrive\\\\Documents\\\\Desktop\\\\SPRING 2021\\\\CS465P\\\\Final_Project\\\\YourWishlist\\\\client\\\\src\\\\components\\\\Button.tsx\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport { useTheme, Text } from \"./Theme\";\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 25,\n    height: 50,\n    width: 245,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nvar Button = function Button(_ref) {\n  var label = _ref.label,\n      onPress = _ref.onPress,\n      variant = _ref.variant,\n      style = _ref.style;\n  var theme = useTheme();\n  var backgroundColor = variant === \"primary\" ? theme.colors.primary : theme.colors.background2;\n  var color = variant === \"primary\" ? theme.colors.background : theme.colors.secondary;\n  return React.createElement(RectButton, {\n    style: [styles.container, style, {\n      backgroundColor: backgroundColor\n    }],\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    variant: \"button\",\n    style: {\n      color: color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, label));\n};\n\nButton.defaultProps = {\n  variant: \"default\"\n};\nexport default Button;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/src/components/Button.tsx"],"names":["React","RectButton","useTheme","Text","styles","StyleSheet","create","container","borderRadius","height","width","justifyContent","alignItems","Button","label","onPress","variant","style","theme","backgroundColor","colors","primary","background2","color","background","secondary","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,QAAiD,8BAAjD;AAEA,SAASC,QAAT,EAAmBC,IAAnB;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE,EADL;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,KAAK,EAAE,GAHE;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,UAAU,EAAE;AALH;AADoB,CAAlB,CAAf;;AAiBA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAqD;AAAA,MAAlDC,KAAkD,QAAlDA,KAAkD;AAAA,MAA3CC,OAA2C,QAA3CA,OAA2C;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAClE,MAAMC,KAAK,GAAGhB,QAAQ,EAAtB;AACA,MAAMiB,eAAe,GACnBH,OAAO,KAAK,SAAZ,GAAwBE,KAAK,CAACE,MAAN,CAAaC,OAArC,GAA+CH,KAAK,CAACE,MAAN,CAAaE,WAD9D;AAEA,MAAMC,KAAK,GACTP,OAAO,KAAK,SAAZ,GAAwBE,KAAK,CAACE,MAAN,CAAaI,UAArC,GAAkDN,KAAK,CAACE,MAAN,CAAaK,SADjE;AAEA,SACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE,CAACrB,MAAM,CAACG,SAAR,EAAmBU,KAAnB,EAA0B;AAAEE,MAAAA,eAAe,EAAfA;AAAF,KAA1B,CADT;AAEQJ,IAAAA,OAAO,EAAPA,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAALA;AAAF,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KADH,CAJF,CADF;AAUD,CAhBD;;AAkBAD,MAAM,CAACa,YAAP,GAAsB;AAAEV,EAAAA,OAAO,EAAE;AAAX,CAAtB;AAEA,eAAeH,MAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { RectButton, RectButtonProperties } from \"react-native-gesture-handler\";\r\n\r\nimport { useTheme, Text } from \"./Theme\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 25,\r\n    height: 50,\r\n    width: 245,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\ninterface ButtonProps {\r\n  variant: \"default\" | \"primary\";\r\n  label?: string;\r\n  onPress: () => void;\r\n  style?: RectButtonProperties[\"style\"];\r\n}\r\n\r\nconst Button = ({ label, onPress, variant, style }: ButtonProps) => {\r\n  const theme = useTheme();\r\n  const backgroundColor =\r\n    variant === \"primary\" ? theme.colors.primary : theme.colors.background2;\r\n  const color =\r\n    variant === \"primary\" ? theme.colors.background : theme.colors.secondary;\r\n  return (\r\n    <RectButton\r\n      style={[styles.container, style, { backgroundColor }]}\r\n      {...{ onPress }}\r\n    >\r\n      <Text variant=\"button\" style={{ color }}>\r\n        {label}\r\n      </Text>\r\n    </RectButton>\r\n  );\r\n};\r\n\r\nButton.defaultProps = { variant: \"default\" };\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}