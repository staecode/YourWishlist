{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cnamu\\\\OneDrive\\\\Documents\\\\Desktop\\\\SPRING 2021\\\\CS465P\\\\Final_Project\\\\YourWishlist\\\\client\\\\src\\\\Home\\\\EditProfile\\\\RoundedCheckboxGroup.tsx\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BorderlessButton } from \"react-native-gesture-handler\";\nimport { Feather as Icon } from \"@expo/vector-icons\";\nimport { Box, Text, useTheme } from \"../../components\";\n\nvar RounedCheckboxGroup = function RounedCheckboxGroup(_ref) {\n  var options = _ref.options,\n      valueIsColor = _ref.valueIsColor;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValues = _useState2[0],\n      setSelectedValues = _useState2[1];\n\n  var theme = useTheme();\n  return React.createElement(Box, {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginTop: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, options.map(function (_ref2) {\n    var value = _ref2.value;\n    var index = selectedValues.indexOf(value);\n    var isSelected = index !== -1;\n    var backgroundColor = isSelected ? theme.colors.primary : theme.colors.background2;\n    return React.createElement(BorderlessButton, {\n      key: value,\n      onPress: function onPress() {\n        if (isSelected) {\n          selectedValues.splice(index, 1);\n        } else {\n          selectedValues.push(value);\n        }\n\n        setSelectedValues(_toConsumableArray(selectedValues));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderWidth: isSelected ? 1 : 0,\n        borderColor: theme.colors.background2,\n        marginBottom: theme.spacing.m,\n        marginRight: theme.spacing.s\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n        backgroundColor: valueIsColor ? value : backgroundColor,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, !valueIsColor && React.createElement(Text, {\n      textAlign: \"center\",\n      variant: \"header\",\n      color: isSelected ? \"background\" : \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, value.toUpperCase()), valueIsColor && isSelected && React.createElement(Icon, {\n      color: \"white\",\n      name: \"check\",\n      size: 16,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }))));\n  }));\n};\n\nexport default RounedCheckboxGroup;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/src/Home/EditProfile/RoundedCheckboxGroup.tsx"],"names":["React","useState","BorderlessButton","Feather","Icon","Box","Text","useTheme","RounedCheckboxGroup","options","valueIsColor","selectedValues","setSelectedValues","theme","map","value","index","indexOf","isSelected","backgroundColor","colors","primary","background2","splice","push","width","height","borderRadius","justifyContent","alignItems","borderWidth","borderColor","marginBottom","spacing","m","marginRight","s","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { BorderlessButton } from \"react-native-gesture-handler\";\r\nimport { Feather as Icon } from \"@expo/vector-icons\";\r\n\r\nimport { Box, Text, useTheme } from \"../../components\";\r\n\r\ninterface RounedCheckboxGroupProps {\r\n  options: { value: string }[];\r\n  valueIsColor?: boolean;\r\n}\r\n\r\nconst RounedCheckboxGroup = ({\r\n  options,\r\n  valueIsColor,\r\n}: RounedCheckboxGroupProps) => {\r\n  const [selectedValues, setSelectedValues] = useState<string[]>([]);\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box flexDirection=\"row\" flexWrap=\"wrap\" marginTop=\"s\">\r\n      {options.map(({ value }) => {\r\n        const index = selectedValues.indexOf(value);\r\n        const isSelected = index !== -1;\r\n        const backgroundColor = isSelected\r\n          ? theme.colors.primary\r\n          : theme.colors.background2;\r\n        return (\r\n          <BorderlessButton\r\n            key={value}\r\n            onPress={() => {\r\n              if (isSelected) {\r\n                selectedValues.splice(index, 1);\r\n              } else {\r\n                selectedValues.push(value);\r\n              }\r\n              setSelectedValues([...selectedValues]);\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: 50,\r\n                height: 50,\r\n                borderRadius: 25,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                borderWidth: isSelected ? 1 : 0,\r\n                borderColor: theme.colors.background2,\r\n                marginBottom: theme.spacing.m,\r\n                marginRight: theme.spacing.s,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 40,\r\n                  height: 40,\r\n                  borderRadius: 20,\r\n                  backgroundColor: valueIsColor ? value : backgroundColor,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                {!valueIsColor && (\r\n                  <Text\r\n                    textAlign=\"center\"\r\n                    variant=\"header\"\r\n                    color={isSelected ? \"background\" : \"secondary\"}\r\n                  >\r\n                    {value.toUpperCase()}\r\n                  </Text>\r\n                )}\r\n                {valueIsColor && isSelected && (\r\n                  <Icon color=\"white\" name=\"check\" size={16} />\r\n                )}\r\n              </View>\r\n            </View>\r\n          </BorderlessButton>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RounedCheckboxGroup;\r\n"]},"metadata":{},"sourceType":"module"}