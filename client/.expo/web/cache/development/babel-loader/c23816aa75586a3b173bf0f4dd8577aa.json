{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\cnamu\\\\OneDrive\\\\Documents\\\\Desktop\\\\SPRING 2021\\\\CS465P\\\\Final_Project\\\\YourWishlist\\\\client\\\\src\\\\Authentication\\\\Login.tsx\";\n\nimport React, { useRef } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { BorderlessButton } from \"react-native-gesture-handler\";\nimport { CommonActions } from \"@react-navigation/native\";\nimport { Container, Button, Text, Box } from \"../components\";\nimport TextInput from \"../components/Form/TextInput\";\nimport Checkbox from \"../components/Form/Checkbox\";\nimport Footer from \"./components/Footer\";\nvar LoginSchema = Yup.object().shape({\n  password: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\")\n});\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFormik = useFormik({\n    validationSchema: LoginSchema,\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      remember: true\n    },\n    onSubmit: function onSubmit() {\n      return navigation.dispatch(CommonActions.reset({\n        index: 0,\n        routes: [{\n          name: \"Home\"\n        }]\n      }));\n    }\n  }),\n      handleChange = _useFormik.handleChange,\n      handleBlur = _useFormik.handleBlur,\n      handleSubmit = _useFormik.handleSubmit,\n      errors = _useFormik.errors,\n      touched = _useFormik.touched,\n      values = _useFormik.values,\n      setFieldValue = _useFormik.setFieldValue;\n\n  var password = useRef(null);\n  var footer = React.createElement(Footer, {\n    title: \"Don\\u2019t have an account?\",\n    action: \"Sign Up here\",\n    onPress: function onPress() {\n      return navigation.navigate(\"SignUp\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n  return React.createElement(Container, {\n    pattern: 0,\n    footer: footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    variant: \"title1\",\n    textAlign: \"center\",\n    marginBottom: \"l\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Welcome back\"), React.createElement(Text, {\n    variant: \"body\",\n    textAlign: \"center\",\n    marginBottom: \"l\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Use your credentials below and login to your account\"), React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Box, {\n    marginBottom: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    icon: \"mail\",\n    placeholder: \"Enter your Email\",\n    onChangeText: handleChange(\"email\"),\n    onBlur: handleBlur(\"email\"),\n    error: errors.email,\n    touched: touched.email,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    returnKeyType: \"next\",\n    returnKeyLabel: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _password$current;\n\n      return (_password$current = password.current) == null ? void 0 : _password$current.focus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    ref: password,\n    icon: \"lock\",\n    placeholder: \"Enter your Password\",\n    onChangeText: handleChange(\"password\"),\n    onBlur: handleBlur(\"password\"),\n    error: errors.password,\n    touched: touched.password,\n    autoCompleteType: \"password\",\n    autoCapitalize: \"none\",\n    returnKeyType: \"go\",\n    returnKeyLabel: \"go\",\n    onSubmitEditing: function onSubmitEditing() {\n      return handleSubmit();\n    },\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), React.createElement(Box, {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginVertical: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Checkbox, {\n    label: \"Remember me\",\n    checked: values.remember,\n    onChange: function onChange() {\n      return setFieldValue(\"remember\", !values.remember);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), React.createElement(BorderlessButton, {\n    onPress: function onPress() {\n      return navigation.navigate(\"ForgotPassword\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    variant: \"button\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Forgot password\"))), React.createElement(Box, {\n    alignItems: \"center\",\n    marginTop: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    onPress: handleSubmit,\n    label: \"Log into your account\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/cnamu/OneDrive/Documents/Desktop/SPRING 2021/CS465P/Final_Project/YourWishlist/client/src/Authentication/Login.tsx"],"names":["React","useRef","useFormik","Yup","BorderlessButton","CommonActions","Container","Button","Text","Box","TextInput","Checkbox","Footer","LoginSchema","object","shape","password","string","min","max","required","email","Login","navigation","validationSchema","initialValues","remember","onSubmit","dispatch","reset","index","routes","name","handleChange","handleBlur","handleSubmit","errors","touched","values","setFieldValue","footer","navigate","current","focus"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { TextInput as RNTextInput } from \"react-native\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { BorderlessButton } from \"react-native-gesture-handler\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\n\r\nimport { Container, Button, Text, Box } from \"../components\";\r\nimport { AuthNavigationProps } from \"../components/Navigation\";\r\nimport TextInput from \"../components/Form/TextInput\";\r\nimport Checkbox from \"../components/Form/Checkbox\";\r\n\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n});\r\n\r\nconst Login = ({ navigation }: AuthNavigationProps<\"Login\">) => {\r\n  const {\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    errors,\r\n    touched,\r\n    values,\r\n    setFieldValue,\r\n  } = useFormik({\r\n    validationSchema: LoginSchema,\r\n    initialValues: { email: \"\", password: \"\", remember: true },\r\n    onSubmit: () =>\r\n      navigation.dispatch(\r\n        CommonActions.reset({\r\n          index: 0,\r\n          routes: [{ name: \"Home\" }],\r\n        })\r\n      ),\r\n  });\r\n  const password = useRef<RNTextInput>(null);\r\n  const footer = (\r\n    <Footer\r\n      title=\"Don’t have an account?\"\r\n      action=\"Sign Up here\"\r\n      onPress={() => navigation.navigate(\"SignUp\")}\r\n    />\r\n  );\r\n  return (\r\n    <Container pattern={0} {...{ footer }}>\r\n      <Text variant=\"title1\" textAlign=\"center\" marginBottom=\"l\">\r\n        Welcome back\r\n      </Text>\r\n      <Text variant=\"body\" textAlign=\"center\" marginBottom=\"l\">\r\n        Use your credentials below and login to your account\r\n      </Text>\r\n      <Box>\r\n        <Box marginBottom=\"m\">\r\n          <TextInput\r\n            icon=\"mail\"\r\n            placeholder=\"Enter your Email\"\r\n            onChangeText={handleChange(\"email\")}\r\n            onBlur={handleBlur(\"email\")}\r\n            error={errors.email}\r\n            touched={touched.email}\r\n            autoCapitalize=\"none\"\r\n            autoCompleteType=\"email\"\r\n            returnKeyType=\"next\"\r\n            returnKeyLabel=\"next\"\r\n            onSubmitEditing={() => password.current?.focus()}\r\n          />\r\n        </Box>\r\n        <TextInput\r\n          ref={password}\r\n          icon=\"lock\"\r\n          placeholder=\"Enter your Password\"\r\n          onChangeText={handleChange(\"password\")}\r\n          onBlur={handleBlur(\"password\")}\r\n          error={errors.password}\r\n          touched={touched.password}\r\n          autoCompleteType=\"password\"\r\n          autoCapitalize=\"none\"\r\n          returnKeyType=\"go\"\r\n          returnKeyLabel=\"go\"\r\n          onSubmitEditing={() => handleSubmit()}\r\n          secureTextEntry\r\n        />\r\n        <Box\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          marginVertical=\"s\"\r\n        >\r\n          <Checkbox\r\n            label=\"Remember me\"\r\n            checked={values.remember}\r\n            onChange={() => setFieldValue(\"remember\", !values.remember)}\r\n          />\r\n          <BorderlessButton\r\n            onPress={() => navigation.navigate(\"ForgotPassword\")}\r\n          >\r\n            <Text variant=\"button\" color=\"primary\">\r\n              Forgot password\r\n            </Text>\r\n          </BorderlessButton>\r\n        </Box>\r\n        <Box alignItems=\"center\" marginTop=\"m\">\r\n          <Button\r\n            variant=\"primary\"\r\n            onPress={handleSubmit}\r\n            label=\"Log into your account\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}